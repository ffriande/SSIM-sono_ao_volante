SVM
1st try

'kernel': ['rbf','poly','sigmoid],
'class_weight':['balanced']

results all with rbf = to the ones already obtained (0.79)

2nd try
'C': [1,10,100,1000],
'kernel': ['rbf'],
'class_weight':['balanced']

results all with C=1000 and results 0.1 better than the obtained by diss (0.80)

3rd try
'C': [1000],
'gamma': [1, 0.1, 0.01, 0.001,'scale','auto'],
'kernel': ['rbf'],
'class_weight':[None,'balanced']

results all with gamma=1 and class_weight=None, making results 0.7 better than the obtained by diss (0.86) accuracy
Final results 
Results...
- Accuracy = 0.86 (0.02)
- Kappa = 0.64 (0.03)
- Confusion matrix (mean; std)
[[0.88 0.05 0.08]
 [0.16 0.79 0.05]
 [0.17 0.02 0.8 ]]
[[0.02 0.01 0.01]
 [0.07 0.06 0.04]
 [0.03 0.02 0.03]]
- Stages recall
-- NREM = 0.88 (0.02)
-- REM = 0.79 (0.06)
-- Wake = 0.80 (0.03)


So final parameters are C=1000, gamma=1, kernel='rbf', class_weight='None'
Point: When running with a different dataset, it is better to try all the steps above.


'n_neighbors':[3, 5, 11, 15, 19],
'weights':['uniform', 'distance'],
'metric':['euclidean', 'manhattan']
